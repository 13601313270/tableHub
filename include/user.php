<?php

/**
* 表user操作接口
*
* User: metaPHP
* Date: 2017/07/09
* Time: 11:53
*/

class user extends kod_db_mysqlSingle{
    protected $tableName = 'user';
    protected $key = 'id';
    protected $keyDataType = 'int';
    public function insert($params, $mysql_insert_id = true)
    {
        $params['register_token'] = substr(md5(time()+rand(0,1000)),0,16);
        $params['password'] = md5($params['password'].$params['register_token']);
        return parent::insert($params, $mysql_insert_id);
    }
    //获取登录token
    public function getLoginToken($email){
        $return = parent::getList(array(
            'email'=>$email
        ));
        $loginToken = md5(rand(0,100000)+$email+time());
        kod_db_memcache::set('userClassLoginToken:'.$email,$loginToken,60*5);
        if(count($return)>0){
            return array(
                'registerToken'=>$return[0]['register_token'],
                'loginToken'=>kod_db_memcache::get('userClassLoginToken:'.$email)
            );
        }else{
            return false;
        }
    }
    //$md5_loginToken_password   md5(密码+registerToken+登录token)
    public function getSessionTokenSafe($email,$md5_loginToken_password){
        $userInfo = $this->getList(array(
            'email'=>$email
        ));
        if(count($userInfo)>0){
            $userInfo = $userInfo[0];
            $md5Arr = array($userInfo['password'],$userInfo['register_token'],kod_db_memcache::get('userClassLoginToken:'.$email));
            if($md5_loginToken_password==md5(implode('',$md5Arr))){
                $randSessionToken = md5(rand(0,100000)+$email+time());
                $info = $this->getList(array(
                    'email'=>$email
                ));
                if(count($info)>0){
                    kod_db_memcache::set('userSessionToken:'.$randSessionToken,intval($info[0]['id']),60*60*2);
                    return $randSessionToken;
                }
            }
        }
        return false;
    }
    public function unLoginBySessionToken($sessionToken){
        kod_db_memcache::set('userSessionToken:'.$sessionToken,false,60*60*2);
    }
    public function getBySessionToken($token){
        $id = kod_db_memcache::get('userSessionToken:'.$token);
        if($id==false){
            return false;
        }else{
            return $this->getByKey($id);
        }
    }
    public function getByKey($valueOfKey, $select = '*')
    {
        $result = parent::getByKey($valueOfKey, $select); // TODO: Change the autogenerated stub
        unset($result['password']);
        return $result;
    }
    public function getList($arr)
    {
//        throw new Exception('禁止直接使用getList');exit;
        return parent::getList($arr); // TODO: Change the autogenerated stub
    }
}

